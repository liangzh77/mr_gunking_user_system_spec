# =============================================================================
# Multi-stage Dockerfile for Production - Frontend
# =============================================================================
# 阶段1: 构建阶段 - 编译Vue应用
# 阶段2: 运行阶段 - Nginx服务
# 优化: 使用国内镜像源加速下载
# =============================================================================

# ============== 阶段1: 构建阶段 ==============
FROM node:18-alpine AS builder

# 使用阿里云镜像源加速apk
RUN sed -i 's/dl-cdn.alpinelinux.org/mirrors.aliyun.com/g' /etc/apk/repositories

# 设置工作目录
WORKDIR /app

# 配置npm使用淘宝镜像
RUN npm config set registry https://registry.npmmirror.com

# 复制package文件
COPY package*.json ./

# 安装依赖(包括开发依赖,因为构建需要vite)
RUN npm ci

# 复制源代码
COPY . .

# 构建参数
ARG VITE_API_BASE_URL
ARG BUILD_DATE
ARG VERSION

# 设置环境变量
ENV VITE_API_BASE_URL=${VITE_API_BASE_URL}

# 构建应用
RUN npm run build

# ============== 阶段2: 运行阶段 ==============
FROM nginx:alpine

# 使用阿里云镜像源加速apk
RUN sed -i 's/dl-cdn.alpinelinux.org/mirrors.aliyun.com/g' /etc/apk/repositories

# 构建参数
ARG BUILD_DATE
ARG VERSION

# 元数据标签
LABEL maintainer="MR Game Ops Team" \
      version="${VERSION}" \
      build_date="${BUILD_DATE}" \
      description="MR Game Ops Frontend - Production"

# 删除默认nginx配置
RUN rm -rf /usr/share/nginx/html/*

# 从构建阶段复制构建产物
COPY --from=builder /app/dist /usr/share/nginx/html

# 复制nginx配置
COPY nginx.conf /etc/nginx/conf.d/default.conf

# 暴露端口
EXPOSE 80

# 健康检查
HEALTHCHECK --interval=30s --timeout=10s --start-period=20s --retries=3 \
    CMD wget --quiet --tries=1 --spider http://localhost/ || exit 1

# 启动nginx
CMD ["nginx", "-g", "daemon off;"]
