paths:
  /auth/game/authorize:
    post:
      tags:
        - 授权
      summary: 游戏授权请求
      description: |
        头显Server请求游戏授权并扣费

        **认证要求**:
        - X-Api-Key: 运营商API Key
        - X-Signature: HMAC-SHA256签名
        - X-Timestamp: Unix时间戳（秒）
        - X-Session-ID: 会话ID（幂等性标识）

        **业务逻辑**:
        1. 验证API Key有效性
        2. 验证HMAC签名（防篡改）
        3. 验证时间戳（防重放攻击，5分钟有效）
        4. 验证会话ID（防重复扣费）
        5. 验证运营商对应用的授权状态
        6. 验证玩家数量在应用允许范围内
        7. 计算费用：总费用 = 玩家数量 × 应用单人价格
        8. 检查账户余额是否充足
        9. 使用数据库事务扣费并创建使用记录
        10. 返回授权Token

        **幂等性**: 相同会话ID重复请求返回已授权信息，不重复扣费

      operationId: authorizeGame
      security:
        - ApiKeyAuth: []
          HmacAuth: []
      parameters:
        - name: X-Api-Key
          in: header
          required: true
          description: 运营商API Key（64位字符串）
          schema:
            type: string
            minLength: 64
            maxLength: 64
            example: "a1b2c3d4e5f6g7h8i9j0k1l2m3n4o5p6q7r8s9t0u1v2w3x4y5z6a7b8c9d0e1f2"
        - name: X-Signature
          in: header
          required: true
          description: HMAC-SHA256签名（Base64编码）
          schema:
            type: string
            example: "Jz3kL9mN2pQ5rS8tU1vW4xY7zA+bC/dE="
        - name: X-Timestamp
          in: header
          required: true
          description: Unix时间戳（秒），服务端验证时间差不超过5分钟
          schema:
            type: integer
            format: int64
            example: 1704067200
        - name: X-Session-ID
          in: header
          required: true
          description: 会话ID（任意唯一字符串，长度1-255字符，推荐使用UUID v4格式）
          schema:
            type: string
            minLength: 1
            maxLength: 255
            example: "7c9e6679-7425-40de-944b-e07fc1f90ae7"
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              required:
                - app_id
                - site_id
                - player_count
              properties:
                app_id:
                  type: string
                  description: 应用ID
                  example: "app_space_adventure_001"
                site_id:
                  type: string
                  description: 运营点ID
                  example: "site_beijing_001"
                player_count:
                  type: integer
                  description: 玩家数量
                  minimum: 1
                  maximum: 100
                  example: 5
      responses:
        '200':
          description: 授权成功
          content:
            application/json:
              schema:
                type: object
                required:
                  - success
                  - data
                properties:
                  success:
                    type: boolean
                    example: true
                  data:
                    type: object
                    required:
                      - authorization_token
                      - session_id
                      - app_name
                      - player_count
                      - unit_price
                      - total_cost
                      - balance_after
                      - authorized_at
                    properties:
                      authorization_token:
                        type: string
                        format: uuid
                        description: 授权Token（UUID格式）
                        example: "550e8400-e29b-41d4-a716-446655440000"
                      session_id:
                        type: string
                        description: 会话ID
                        example: "7c9e6679-7425-40de-944b-e07fc1f90ae7"
                      app_name:
                        type: string
                        description: 应用名称
                        example: "太空探险"
                      player_count:
                        type: integer
                        description: 玩家数量
                        example: 5
                      unit_price:
                        type: string
                        description: 单人价格（字符串格式，避免浮点精度问题）
                        example: "10.00"
                      total_cost:
                        type: string
                        description: 总费用
                        example: "50.00"
                      balance_after:
                        type: string
                        description: 扣费后账户余额
                        example: "450.00"
                      authorized_at:
                        type: string
                        format: date-time
                        description: 授权时间（ISO 8601格式）
                        example: "2025-01-01T12:30:00.000Z"
        '400':
          description: 请求参数错误
          content:
            application/json:
              schema:
                $ref: '../openapi.yaml#/components/schemas/ErrorResponse'
              examples:
                player_count_out_of_range:
                  summary: 玩家数量超出范围
                  value:
                    error_code: "PLAYER_COUNT_OUT_OF_RANGE"
                    message: "玩家数量必须在2-8之间，当前请求: 9人"
                    details:
                      min_players: 2
                      max_players: 8
                      requested_players: 9
                invalid_signature:
                  summary: HMAC签名无效
                  value:
                    error_code: "INVALID_SIGNATURE"
                    message: "HMAC签名验证失败，请检查签名算法和密钥"
                timestamp_expired:
                  summary: 时间戳过期
                  value:
                    error_code: "TIMESTAMP_EXPIRED"
                    message: "请求时间戳已过期，允许时间差: 5分钟"
                    details:
                      server_time: 1704067500
                      request_time: 1704067000
                      max_diff_seconds: 300
        '401':
          description: 认证失败
          content:
            application/json:
              schema:
                $ref: '../openapi.yaml#/components/schemas/ErrorResponse'
              examples:
                invalid_api_key:
                  summary: API Key无效
                  value:
                    error_code: "INVALID_API_KEY"
                    message: "API Key不存在或已失效，请联系管理员"
        '402':
          description: 余额不足
          content:
            application/json:
              schema:
                $ref: '../openapi.yaml#/components/schemas/ErrorResponse'
              example:
                error_code: "INSUFFICIENT_BALANCE"
                message: "账户余额不足，当前余额: 30.00元，需要: 50.00元"
                details:
                  current_balance: "30.00"
                  required_amount: "50.00"
                  shortage: "20.00"
        '403':
          description: 应用未授权
          content:
            application/json:
              schema:
                $ref: '../openapi.yaml#/components/schemas/ErrorResponse'
              example:
                error_code: "APP_NOT_AUTHORIZED"
                message: "您未被授权使用此应用，请联系管理员申请授权"
                details:
                  app_id: "app_space_adventure_001"
                  app_name: "太空探险"
        '409':
          description: 会话重复（幂等性处理）
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
                    example: true
                  message:
                    type: string
                    example: "会话已存在，返回已授权信息"
                  data:
                    type: object
                    description: 原授权信息
        '429':
          description: 请求频率超限
          content:
            application/json:
              schema:
                $ref: '../openapi.yaml#/components/schemas/ErrorResponse'
              example:
                error_code: "RATE_LIMIT_EXCEEDED"
                message: "请求频率超限，单运营商每分钟最多10次授权请求"
                details:
                  limit: 10
                  window_seconds: 60
                  retry_after: 45
        '500':
          $ref: '../openapi.yaml#/components/responses/InternalServerError'

  /auth/operators/register:
    post:
      tags:
        - 授权
      summary: 运营商注册
      description: 新用户注册运营商账户，自动生成API Key
      operationId: registerOperator
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              required:
                - username
                - password
                - name
                - phone
                - email
              properties:
                username:
                  type: string
                  description: 用户名（唯一，3-20字符，字母数字下划线）
                  pattern: '^[a-zA-Z0-9_]{3,20}$'
                  example: "operator_beijing_01"
                password:
                  type: string
                  description: 密码（8-32字符，必须包含大小写字母和数字）
                  minLength: 8
                  maxLength: 32
                  example: "StrongPass123"
                name:
                  type: string
                  description: 真实姓名或公司名
                  minLength: 2
                  maxLength: 50
                  example: "北京星空娱乐有限公司"
                phone:
                  type: string
                  description: 联系电话
                  pattern: '^1[3-9]\d{9}$'
                  example: "13800138000"
                email:
                  type: string
                  format: email
                  description: 邮箱地址
                  example: "operator@example.com"
      responses:
        '201':
          description: 注册成功
          content:
            application/json:
              schema:
                type: object
                required:
                  - success
                  - data
                properties:
                  success:
                    type: boolean
                    example: true
                  message:
                    type: string
                    example: "注册成功"
                  data:
                    type: object
                    required:
                      - operator_id
                      - username
                      - api_key
                      - category
                      - balance
                      - created_at
                    properties:
                      operator_id:
                        type: string
                        example: "op_12345"
                      username:
                        type: string
                        example: "operator_beijing_01"
                      api_key:
                        type: string
                        description: API Key（请妥善保存，仅显示一次）
                        example: "a1b2c3d4e5f6g7h8i9j0k1l2m3n4o5p6q7r8s9t0u1v2w3x4y5z6a7b8c9d0e1f2"
                      category:
                        type: string
                        enum: [trial, normal, vip]
                        description: 客户分类
                        example: "trial"
                      balance:
                        type: string
                        description: 初始余额
                        example: "0.00"
                      created_at:
                        type: string
                        format: date-time
                        example: "2025-01-01T10:00:00.000Z"
        '400':
          description: 请求参数错误
          content:
            application/json:
              schema:
                $ref: '../openapi.yaml#/components/schemas/ErrorResponse'
              examples:
                username_exists:
                  summary: 用户名已存在
                  value:
                    error_code: "USERNAME_EXISTS"
                    message: "用户名已被注册，请更换"
                invalid_password:
                  summary: 密码强度不足
                  value:
                    error_code: "INVALID_PARAMS"
                    message: "密码必须包含大小写字母和数字，长度8-32字符"
        '500':
          $ref: '../openapi.yaml#/components/responses/InternalServerError'

  /auth/operators/login:
    post:
      tags:
        - 授权
      summary: 运营商登录
      description: 运营商使用用户名/密码登录，获取JWT Token
      operationId: operatorLogin
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              required:
                - username
                - password
              properties:
                username:
                  type: string
                  example: "operator_beijing_01"
                password:
                  type: string
                  example: "StrongPass123"
      responses:
        '200':
          description: 登录成功
          content:
            application/json:
              schema:
                type: object
                required:
                  - success
                  - data
                properties:
                  success:
                    type: boolean
                    example: true
                  data:
                    type: object
                    required:
                      - access_token
                      - token_type
                      - expires_in
                      - operator
                    properties:
                      access_token:
                        type: string
                        description: JWT Token
                        example: "eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9..."
                      token_type:
                        type: string
                        example: "Bearer"
                      expires_in:
                        type: integer
                        description: Token有效期（秒）
                        example: 2592000
                      operator:
                        type: object
                        description: 运营商基本信息
                        properties:
                          operator_id:
                            type: string
                            example: "op_12345"
                          username:
                            type: string
                            example: "operator_beijing_01"
                          name:
                            type: string
                            example: "北京星空娱乐有限公司"
                          category:
                            type: string
                            enum: [trial, normal, vip]
                            example: "normal"
        '401':
          description: 认证失败
          content:
            application/json:
              schema:
                $ref: '../openapi.yaml#/components/schemas/ErrorResponse'
              example:
                error_code: "UNAUTHORIZED"
                message: "用户名或密码错误"
        '403':
          description: 账户已注销
          content:
            application/json:
              schema:
                $ref: '../openapi.yaml#/components/schemas/ErrorResponse'
              example:
                error_code: "ACCOUNT_DEACTIVATED"
                message: "账户已注销，无法登录"
        '500':
          $ref: '../openapi.yaml#/components/responses/InternalServerError'

  /auth/operators/logout:
    post:
      tags:
        - 授权
      summary: 运营商退出登录
      description: 注销当前JWT Token（加入黑名单）
      operationId: operatorLogout
      security:
        - BearerAuth: []
      responses:
        '200':
          description: 退出成功
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
                    example: true
                  message:
                    type: string
                    example: "已退出登录"
        '401':
          $ref: '../openapi.yaml#/components/responses/UnauthorizedError'
        '500':
          $ref: '../openapi.yaml#/components/responses/InternalServerError'

  /auth/admin/login:
    post:
      tags:
        - 授权
      summary: 管理员登录
      description: 管理员使用用户名/密码登录，获取JWT Token
      operationId: adminLogin
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              required:
                - username
                - password
              properties:
                username:
                  type: string
                  example: "admin"
                password:
                  type: string
                  example: "AdminPass123"
      responses:
        '200':
          description: 登录成功
          content:
            application/json:
              schema:
                type: object
                required:
                  - success
                  - data
                properties:
                  success:
                    type: boolean
                    example: true
                  data:
                    type: object
                    required:
                      - access_token
                      - token_type
                      - expires_in
                      - admin
                    properties:
                      access_token:
                        type: string
                        description: JWT Token
                        example: "eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9..."
                      token_type:
                        type: string
                        example: "Bearer"
                      expires_in:
                        type: integer
                        description: Token有效期（秒）
                        example: 2592000
                      admin:
                        type: object
                        properties:
                          admin_id:
                            type: string
                            example: "admin_001"
                          username:
                            type: string
                            example: "admin"
                          name:
                            type: string
                            example: "系统管理员"
        '401':
          description: 认证失败
          content:
            application/json:
              schema:
                $ref: '../openapi.yaml#/components/schemas/ErrorResponse'
              example:
                error_code: "UNAUTHORIZED"
                message: "用户名或密码错误"
        '500':
          $ref: '../openapi.yaml#/components/responses/InternalServerError'

  /auth/finance/login:
    post:
      tags:
        - 授权
      summary: 财务人员登录
      description: 财务人员使用用户名/密码登录，获取JWT Token
      operationId: financeLogin
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              required:
                - username
                - password
              properties:
                username:
                  type: string
                  example: "finance_zhang"
                password:
                  type: string
                  example: "FinancePass123"
      responses:
        '200':
          description: 登录成功
          content:
            application/json:
              schema:
                type: object
                required:
                  - success
                  - data
                properties:
                  success:
                    type: boolean
                    example: true
                  data:
                    type: object
                    required:
                      - access_token
                      - token_type
                      - expires_in
                      - finance
                    properties:
                      access_token:
                        type: string
                        description: JWT Token
                        example: "eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9..."
                      token_type:
                        type: string
                        example: "Bearer"
                      expires_in:
                        type: integer
                        description: Token有效期（秒）
                        example: 2592000
                      finance:
                        type: object
                        properties:
                          finance_id:
                            type: string
                            example: "fin_001"
                          username:
                            type: string
                            example: "finance_zhang"
                          name:
                            type: string
                            example: "张财务"
                          role:
                            type: string
                            enum: [specialist, manager, auditor]
                            description: 财务角色
                            example: "specialist"
        '401':
          description: 认证失败
          content:
            application/json:
              schema:
                $ref: '../openapi.yaml#/components/schemas/ErrorResponse'
              example:
                error_code: "UNAUTHORIZED"
                message: "用户名或密码错误"
        '500':
          $ref: '../openapi.yaml#/components/responses/InternalServerError'
