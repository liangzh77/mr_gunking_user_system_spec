# Nginx 配置示例 - MR 游戏运营管理系统
#
# 部署路径: /etc/nginx/sites-available/mr-game-ops.conf
#
# 使用方法:
# 1. 复制到 /etc/nginx/sites-available/
# 2. 修改 server_name 为你的域名
# 3. 创建符号链接: ln -s /etc/nginx/sites-available/mr-game-ops.conf /etc/nginx/sites-enabled/
# 4. 测试配置: nginx -t
# 5. 重新加载: systemctl reload nginx

# HTTP -> HTTPS 重定向
server {
    listen 80;
    listen [::]:80;
    server_name yourdomain.com www.yourdomain.com;

    # ACME challenge for Let's Encrypt
    location /.well-known/acme-challenge/ {
        root /var/www/certbot;
    }

    # Redirect all other traffic to HTTPS
    location / {
        return 301 https://$server_name$request_uri;
    }
}

# HTTPS 服务器
server {
    listen 443 ssl http2;
    listen [::]:443 ssl http2;
    server_name yourdomain.com www.yourdomain.com;

    # SSL 证书 (Let's Encrypt)
    ssl_certificate /etc/letsencrypt/live/yourdomain.com/fullchain.pem;
    ssl_certificate_key /etc/letsencrypt/live/yourdomain.com/privkey.pem;

    # TLS 1.3 配置 (推荐)
    ssl_protocols TLSv1.2 TLSv1.3;
    ssl_prefer_server_ciphers off;

    # Modern cipher suite (TLS 1.2+)
    ssl_ciphers 'ECDHE-ECDSA-AES128-GCM-SHA256:ECDHE-RSA-AES128-GCM-SHA256:ECDHE-ECDSA-AES256-GCM-SHA384:ECDHE-RSA-AES256-GCM-SHA384:ECDHE-ECDSA-CHACHA20-POLY1305:ECDHE-RSA-CHACHA20-POLY1305:DHE-RSA-AES128-GCM-SHA256:DHE-RSA-AES256-GCM-SHA384';

    # SSL session cache (性能优化)
    ssl_session_cache shared:SSL:10m;
    ssl_session_timeout 10m;
    ssl_session_tickets off;

    # OCSP Stapling (减少客户端 OCSP 查询)
    ssl_stapling on;
    ssl_stapling_verify on;
    ssl_trusted_certificate /etc/letsencrypt/live/yourdomain.com/chain.pem;
    resolver 8.8.8.8 8.8.4.4 valid=300s;
    resolver_timeout 5s;

    # 安全响应头 (备份 - 应用也会设置)
    add_header Strict-Transport-Security "max-age=31536000; includeSubDomains; preload" always;
    add_header X-Frame-Options "DENY" always;
    add_header X-Content-Type-Options "nosniff" always;
    add_header X-XSS-Protection "1; mode=block" always;

    # 上传文件大小限制
    client_max_body_size 10M;

    # 日志
    access_log /var/log/nginx/mr-game-ops.access.log;
    error_log /var/log/nginx/mr-game-ops.error.log;

    # 代理到 FastAPI 应用
    location / {
        proxy_pass http://127.0.0.1:8000;
        proxy_http_version 1.1;

        # Proxy headers (重要!)
        proxy_set_header Host $host;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Proto $scheme;
        proxy_set_header X-Forwarded-Host $host;
        proxy_set_header X-Forwarded-Port $server_port;

        # WebSocket support (如果需要)
        proxy_set_header Upgrade $http_upgrade;
        proxy_set_header Connection "upgrade";

        # Timeouts
        proxy_connect_timeout 60s;
        proxy_send_timeout 60s;
        proxy_read_timeout 60s;

        # Buffering
        proxy_buffering on;
        proxy_buffer_size 4k;
        proxy_buffers 8 4k;
        proxy_busy_buffers_size 8k;
    }

    # 静态文件 (如果有)
    location /static/ {
        alias /var/www/mr-game-ops/static/;
        expires 1y;
        add_header Cache-Control "public, immutable";
        access_log off;
    }

    # 前端静态文件 (如果部署在同一服务器)
    location /app/ {
        alias /var/www/mr-game-ops/frontend/;
        try_files $uri $uri/ /app/index.html;
        expires 1h;
        add_header Cache-Control "public, must-revalidate, proxy-revalidate";
    }

    # API 文档 (生产环境禁用)
    location /api/docs {
        deny all;
        return 403;
    }

    location /api/redoc {
        deny all;
        return 403;
    }

    location /api/openapi.json {
        deny all;
        return 403;
    }

    # 健康检查 (不需要认证)
    location /health {
        proxy_pass http://127.0.0.1:8000;
        access_log off;
    }

    # Prometheus metrics (仅内网访问)
    location /metrics {
        allow 10.0.0.0/8;      # 内网 IP 范围
        allow 172.16.0.0/12;   # 内网 IP 范围
        allow 192.168.0.0/16;  # 内网 IP 范围
        deny all;

        proxy_pass http://127.0.0.1:8000;
        access_log off;
    }
}
