# =============================================================================
# Multi-stage Dockerfile for Frontend Production
# =============================================================================
# 阶段1: 构建阶段 - 编译Vue应用
# 阶段2: 运行阶段 - Nginx服务静态文件
# =============================================================================

# ============== 阶段1: 构建阶段 ==============
FROM node:18-alpine AS builder

# 设置构建参数
ARG VITE_API_BASE_URL
ARG BUILD_DATE
ARG VERSION

# 设置工作目录
WORKDIR /app

# 配置npm使用淘宝镜像加速
RUN npm config set registry https://registry.npmmirror.com

# 复制package文件
COPY package*.json ./

# 安装依赖（生产依赖）
RUN npm ci --only=production --legacy-peer-deps

# 安装开发依赖（构建需要）
RUN npm install --save-dev vite @vitejs/plugin-vue

# 复制应用代码
COPY . .

# 设置环境变量
ENV VITE_API_BASE_URL=${VITE_API_BASE_URL}
ENV NODE_ENV=production

# 构建应用
RUN npm run build

# 验证构建输出
RUN ls -la /app/dist && \
    if [ ! -f /app/dist/index.html ]; then \
        echo "ERROR: Build failed - index.html not found!"; \
        exit 1; \
    fi

# ============== 阶段2: Nginx运行阶段 ==============
FROM nginx:1.25-alpine

# 设置标签
LABEL maintainer="MR Game Ops Team"
LABEL build_date="${BUILD_DATE}"
LABEL version="${VERSION}"
LABEL description="MR Game Operations System - Frontend"

# 安装curl用于健康检查
RUN apk add --no-cache curl

# 从构建阶段复制构建产物
COPY --from=builder /app/dist /usr/share/nginx/html

# 复制Nginx配置
COPY nginx.conf /etc/nginx/nginx.conf

# 创建nginx用户和必要的目录
RUN chown -R nginx:nginx /usr/share/nginx/html && \
    chown -R nginx:nginx /var/cache/nginx && \
    chown -R nginx:nginx /var/log/nginx && \
    chmod -R 755 /usr/share/nginx/html

# 暴露端口
EXPOSE 80

# 健康检查
HEALTHCHECK --interval=30s --timeout=10s --start-period=20s --retries=3 \
    CMD curl -f http://localhost:80/ || exit 1

# 启动Nginx
CMD ["nginx", "-g", "daemon off;"]
