version: '3.8'

services:
  # PostgreSQL数据库
  postgres:
    image: postgres:14-alpine
    container_name: mr_game_ops_db
    environment:
      POSTGRES_USER: mr_admin
      POSTGRES_PASSWORD: mr_secure_password_2024
      POSTGRES_DB: mr_game_ops
      POSTGRES_INITDB_ARGS: "-E UTF8 --locale=C"
    ports:
      - "5432:5432"
    volumes:
      - postgres_data:/var/lib/postgresql/data
      - ./backend/scripts/init.sql:/docker-entrypoint-initdb.d/init.sql
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U mr_admin -d mr_game_ops"]
      interval: 10s
      timeout: 5s
      retries: 5
    networks:
      - mr_network

  # FastAPI后端服务 (开发环境)
  backend:
    build:
      context: ./backend
      dockerfile: Dockerfile.dev
    container_name: mr_game_ops_backend
    command: uvicorn src.main:app --host 0.0.0.0 --port 8000 --reload
    volumes:
      - ./backend:/app
    ports:
      - "8000:8000"
    environment:
      # Database
      DATABASE_URL: postgresql+asyncpg://mr_admin:mr_secure_password_2024@postgres:5432/mr_game_ops

      # Security
      SECRET_KEY: dev_secret_key_change_in_production_2024
      JWT_SECRET_KEY: dev_jwt_secret_change_in_production_2024
      JWT_ALGORITHM: HS256
      JWT_ACCESS_TOKEN_EXPIRE_MINUTES: 43200
      ENCRYPTION_KEY: dev_encryption_key_32_bytes_long

      # Application
      APP_NAME: "MR游戏运营管理系统"
      APP_VERSION: "0.1.0"
      DEBUG: "true"
      ENVIRONMENT: development

      # API
      API_V1_PREFIX: /api/v1
      CORS_ORIGINS: http://localhost:3000,http://localhost:5173

      # Rate Limiting
      RATE_LIMIT_PER_MINUTE: 10
      RATE_LIMIT_IP_PER_MINUTE: 100

      # Logging
      LOG_LEVEL: DEBUG
      LOG_FORMAT: json
    depends_on:
      postgres:
        condition: service_healthy
    networks:
      - mr_network
    restart: unless-stopped

  # PgAdmin (数据库管理工具)
  pgadmin:
    image: dpage/pgadmin4:latest
    container_name: mr_game_ops_pgadmin
    environment:
      PGADMIN_DEFAULT_EMAIL: admin@mrgameops.com
      PGADMIN_DEFAULT_PASSWORD: admin_password
      PGADMIN_CONFIG_SERVER_MODE: 'False'
    ports:
      - "5050:80"
    volumes:
      - pgadmin_data:/var/lib/pgadmin
    networks:
      - mr_network
    depends_on:
      - postgres

volumes:
  postgres_data:
    driver: local
  pgadmin_data:
    driver: local

networks:
  mr_network:
    driver: bridge
